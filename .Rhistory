add2 <- function(x,y){
x+y
}
add2(3,5)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
above <- function(x,n){
use <- x > n
x[use]
}
x<- 1:20
x
above(x, 15)
above(x, 10)
above <- function(x,n=10){
use <- x > n
x[use]
}
above(x)
columnnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean([y,i])
}
means
}
columnnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnnmean(airquality)
columnnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnnmean(airquality)
columnnmean(airquality, 0)
cube <- function(x,n){x^3}
cube(3)
x <- 1:10
if (x > 5) {x<-0}
f <- function(x){
g <- function(y){
y+z
}
z <- 4
x + g(x)
}
z <- 10
z
f(3)
x <- 5
y <- if(x<3){NA} else {10}
y
souce("pollutantmean.R")
source("pollutantmean.R")
list.files(pwd)
pwd
cwd
list.files("/Users/rharmon/coursera/specdata")
pollutantmean <- function(directory, pollutant, id=1:332){
files <- list.files(directory)
filepaths <- paste(directory, "/", files, spe="")
init <- if (pollutant == "sulfate")
{
2
}
else
{
3
}
tdata <- matrix(NA,0,4)
for (i in id) {
data <- read.csv(filepaths[i])
tdata <- rbind(tdata, data)
}
mean(tdata[,init], na.rm=TRUE)
}
pollutantmean("/Users/rharmon/coursera/specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id=1:332){
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
init <- if (pollutant == "sulfate")
{
2
}
else
{
3
}
tdata <- matrix(NA,0,4)
for (i in id) {
data <- read.csv(filepaths[i])
tdata <- rbind(tdata, data)
}
mean(tdata[,init], na.rm=TRUE)
}
pollutantmean("/Users/rharmon/coursera/specdata", "sulfate", 1:10)
pollutantmean("/Users/rharmon/coursera/specdata", "nitrate", 23)
pollutantmean("/Users/rharmon/coursera/specdata", "nitrate", 70:72)
complete <- function(directory, id=1:332){
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
for (i in id) {
data <- read.csv(filepaths[i])
s[i] <- sum(complete.cases(data))
}
dat <- data.frame(cbind(id, nobs=s))
retrun(dat)
}
complete("/Users/rharmon/coursera/specdata", 1)
complete <- function(directory, id=1:332){
s <- vector()
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
for (i in id) {
data <- read.csv(filepaths[i])
s[i] <- sum(complete.cases(data))
}
dat <- data.frame(cbind(id, nobs=s))
retrun(dat)
}
complete("/Users/rharmon/coursera/specdata", 1)
complete <- function(directory, id=1:332){
s <- vector()
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
for (i in id) {
data <- read.csv(filepaths[i])
s[i] <- sum(complete.cases(data))
}
dat <- data.frame(cbind(id, nobs=s))
return(dat)
}
complete("/Users/rharmon/coursera/specdata", 1)
complete("/Users/rharmon/coursera/specdata", c(2,4,8,10,12))
complete("/Users/rharmon/coursera/specdata", 30:25
)
complete <- function(directory, id=1:332){
s <- vector()
for (i in 1:length(id)) {
path <- c(paste(directory, "/", formatC(id[i], width=3, flag=0),".csv",sep=""))
data <- c(read.csv(path))
s[i] <- sum(complete.cases(data))
}
dat <- data.frame(cbind(id, nobs=s))
return(dat)
}
complete("/Users/rharmon/coursera/specdata", 1)
complete("/Users/rharmon/coursera/specdata", c(2,4,8,10,12))
complete("/Users/rharmon/coursera/specdata", 30:25)
complete("/Users/rharmon/coursera/specdata", 3)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
fset <- c(1:length(files))
okset <- fset[complete(directory, fset)[,2] > threshold]
result <- c()
for (i in okset) {
data <- read.csv(filepaths[i])
bdata <- !is.na(data)
tdata <- data[bdata[,1]&bdata[,2]&bdata[,3]&bdata[,4],]
result <- cbind(result,cor(tdata[,2], tdata[,3]))
}
as.vector(result)
}
sourc("corr.R")
cr <- corr("specdata", 150)
cr <- corr("/Users/rharmon/coursera/specdata", 150)
head(cr)
summary(cr)
cr <- corr("/Users/rharmon/coursera/specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source('~/coursera/pollutantmean.R')
source('~/coursera/complete.R')
source('~/coursera/corr.R')
submit()
submit()
getwd()
subit()
submit()
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
install.packages("swirl")
library("swirl")
q()
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Exploratory Data Analysis")
library(kernlab)
packages.install("kernlab")
exit
quit
install.packages("kernlab")
pwd
pwd()
getwd()
data(spam)
library(kernlab)
version()
version
update
data(spam)
data
data("spam")
str(data(spam))
trainIndicator = rbinom(4601, size=1, prob = 0.5)
table(trainIndicator)
set.seed(3435)
trainIndicator = rbinom(4601, size=1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator ==1, ]
testSpam = spam[trainIndicator ==0, ]
str(trainSpam)
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
plot(log10(trainSpam[, 1:2] + 1))
plot(log10(trainSpam[, 1:3] + 1))
plot(log10(trainSpam[, 1:4] + 1))
setwd("~/github/RepData_PeerAssessment1")
getwd()
dataSteps <- read.csv("activity.csv")
head(dataSteps)
summary(dataSteps)
names(dataSteps)
tapply(dataSteps$date, dataSteps$steps, sum)
tapply(dataSteps$steps, dataSteps$date, sum)
dataStepsDate <- tapply(dataSteps$steps, dataSteps$date, sum)
help("hist")
hist(dataStepsDate, main="Stpes per Day", xlab="Date", ylab="Sum Steps")
hist(dataStepsDate, main="Stpes per Day", xlab="Sum Steps", ylab="Date")
dataStepsDate
hist(dataStepsDate, main="Steps per Day", xlab="Sum Steps", ylab="Days")
mean(dataStepsDate, na.rm=TRUE)
mean(dataStepsDate, na.rm=FALSE)
mean(dataStepsDate, na.rm=TRUE)
median(dataStepsDate, na.rm=TRUE)
as.Date(dataSteps$date)
dataSteps$date
meadStepsDateData <- mean(dataStepsDate, na.rm=TRUE)
aggregate(steps$steps, list(steps$interval), mean, na.rm=T)
aggregate(dataSteps$steps, list(dataSteps$interval), mean, na.rm=T)
meadStepsDateData <- mean(dataStepsDate, na.rm=TRUE)
meadStepsDateData
aggregate(dataSteps$steps, list(dataSteps$interval), mean, na.rm=T)
aggregate(dataSteps$steps ~ dataSteps$interval, data=dataSteps, mean, na.rm=T)
names(meanStepsPerInterval)<-c("interval", "steps")
meanStepsPerInterval <- aggregate(dataSteps$steps ~ dataSteps$interval, data=dataSteps, mean, na.rm=T)
names(meanStepsPerInterval)<-c("interval", "steps")
xyplot(steps ~ interval, data=meanStepsPerInterval, type="l", grid=TRUE, ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average number of steps by 5-minutes intervals")
xyplot(steps ~ interval, data=meanStepsPerInterval, type="l", grid=TRUE, ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average number of steps by 5-minutes intervals")
plot(meanStepsPerInterval$interval, meanStepsPerInterval$steps, type="l")
meanStepsPerInterval$interval[which.max(meanStepsPerInterval$steps)]
sum(is.na(dataSteps$steps))
names(dataSteps)
names(dataSteps)
is.na(dataSteps$steps)
is.na(!dataSteps$steps)
head(dataSteps)
dataSteps_NoNA <- read.csv("activity.csv")
dataSteps_NoNA_1 <- dataSteps
str(dataSteps_NoNA)
str(dataSteps_NoNA_1)
mean(dataSteps$steps[!is.na(dataSteps$steps)])
mean(dataSteps$steps)
mean(dataSteps$steps[is.na(dataSteps$steps)])
imputVar <- mean(dataSteps$steps[!is.na(dataSteps$steps)])
dataSteps_NoNA
head(dataSteps_NoNA)
dataSteps_NoNA$steps
is.na(dataSteps_NoNA_1$steps) <- imputVar
head(dataSteps_NoNA$steps)
head(dataSteps_NoNA_1$steps)
imputVar
is.na(dataSteps_NoNA_1$steps) <- (which == 24)
is.na(dataSteps_NoNA_1$steps) <- which (dataSteps_NoNA_1$steps == 24)
dataSteps_NoNA_1$steps
which (dataSteps_NoNA_1$steps == 24)
which (dataSteps_NoNA_1$steps == 25)
dataSteps_NoNA_1$steps[is.na(dataSteps_NoNA$steps)] <- mean(dataSteps_NoNA$steps[!is.na(dataSteps_NoNA$steps)])
which (dataSteps_NoNA_1$steps == NA)
which (dataSteps_NoNA_1$steps == 24)
which (dataSteps_NoNA$steps == 24)
which (dataSteps_NoNA$steps == NA)
dataSteps_NoNA_1$steps
dataSteps_NoNA$steps
dataSteps_NoNA_1$steps
dataSteps_NoNA$steps[is.na(dataSteps_NoNA$steps)] <- mean(dataSteps_NoNA$steps[!is.na(dataSteps_NoNA$steps)])
dataSteps_NoNA$steps
dataSteps_NoNA_2 <- dataSteps
which (dataSteps_NoNA$steps == NA)
which (dataSteps_NoNA_2$steps == NA)
which (dataSteps_NoNA_2$steps == "NA")
mean(dataSteps$steps[is.na(dataSteps$steps)])
mean(dataSteps_NoNA_1$steps[is.na(dataSteps_NoNA_1$steps)])
mean(dataSteps_NoNA_1$steps[!is.na(dataSteps_NoNA_1$steps)])
sum(is.na(dataSteps$steps))
sum(is.na(dataSteps_NoNA$steps))
sum(is.na(dataSteps_NoNA_1$steps))
sum(is.na(dataSteps_NoNA_2$steps))
dataSteps_NoNA$steps[is.na(dataSteps_NoNA$steps)] <- mean(dataSteps_NoNA$steps[!is.na(dataSteps_NoNA$steps)])
sum(is.na(dataSteps_NoNA$steps))
dataSteps_NoNA_2$steps[is.na(dataSteps_NoNA_2$steps)] <- imputVar
sum(is.na(dataSteps_NoNA$steps))
sum(is.na(dataSteps_NoNA_1$steps))
sum(is.na(dataSteps_NoNA_2$steps))
tapply(dataSteps_NA2$steps, dataSteps_NA2$date, sum)
tapply(dataSteps_NoNA2$steps, dataSteps_NoNA2$date, sum)
tapply(dataSteps_NoNA_2$steps, dataSteps_NoNA_2$date, sum)
tapply(dataSteps$steps, dataSteps$date, sum)
dataStepsDate_NoNA <- tapply(dataSteps_NoNA_2$steps, dataSteps_No_NA2$date, sum)
dataStepsDate_NoNA <- tapply(dataSteps_NoNA_2$steps, dataSteps_NoNA_2$date, sum)
mean(dataStepsDate)
mean(dataStepsDate_NoNA)
mean(dataStepsDate_NoNA, na.rm=TRUE)
mean(dataStepsDate, na.rm=TRUE)
median(dataStepsDate, na.rm=TRUE)
median(dataStepsDate)
median(dataStepsDate_NoNA)
median(dataStepsDate_NoNA, na.rm = TRUE)
sum(is.na(dataSteps_NoNA_2$steps))
hist(dataStepsDate_NoNA, main="Steps per Day, No NA“, xlab="Steps", ylab=“Frequency”)
hist(dataStepsDate_NoNA, main="Steps per Day, No NA", xlab="Steps", ylab=“Frequency”)
hist(dataStepsDate_NoNA, main="Steps per Day, No NA", xlab="Steps", ylab="Frequency")
sum(dataSteps_NoNA_2$steps)
sum(dataSteps$steps)
sum(!is.na(dataSteps_NoNA_2$steps))
sum(!is.na(dataSteps$steps))
sum(dataStepsDate_NoNA, na.rm = TRUE)
sum(dataStepsDate_NoNA)
sum(dataStepsDate)
sum(dataStepsDate, na.rm=TRUE)
names(dataStepsDate_NoNA)
names(dataStepsDate)
dataStepsDate
names(dataSteps)
names(dataSteps_NoNA_2)
dataSteps_NoNA_2 <- "weekday_flag"
names(dataSteps_NoNA_2)
dataSteps_NoNA_2 <- dataSteps
names(dataSteps_NoNA_2)
dataSteps_NoNA <- dataSteps
dataSteps_NoNA$steps[is.na(dataSteps_NoNA$steps)] <- mean(dataSteps_NoNA$steps[is.na(dataSteps_NoNA$steps)])
sum(is.na(dataSteps_NoNA$steps))
dataSteps_NoNA$steps[is.na(dataSteps_NoNA$steps)] <- mean(dataSteps_NoNA$steps[!is.na(dataSteps_NoNA$steps)])
sum(is.na(dataSteps_NoNA$steps))
mean(dataSteps_NoNA$steps[!is.na(dataSteps_NoNA$steps)])
maxMeanInterval
meanStepsPerInterval <- aggregate(dataSteps$steps ~ dataSteps$interval, data=dataSteps, mean, na.rm=T)
maxMeanInterval <- meanStepsPerInterval$interval[which.max(meanStepsPerInterval$steps)]
maxMeanInterval
names(meanStepsPerInterval)<-c("interval", "steps")
maxMeanInterval <- meanStepsPerInterval$interval[which.max(meanStepsPerInterval$steps)]
maxMeanInterval
weekdays(dataSteps_NoNA$date)
class(dataSteps_NoNA)
weekdays(as.Date(dataSteps_NoNA$date)
)
dataSteps_NoNA_2$weekday_flag
dataSteps_NoNA_2$day <- "weekday"
dataSteps_NoNA_2$day
dataSteps_NoNA_2$weekday_flagday <- "weekday_flag"
dataSteps_NoNA_2$weekday_flagday <- weekdays(as.Date(dataSteps_NoNA$date)
)
dataSteps_NoNA_2$weekday_flagday
dataSteps_NoNA_2$day
dataSteps_NoNA_2$day -> weekday_flagday
dataSteps_NoNA_2$day
dataSteps_NoNA_2$weekday_flagday
sapply(dataSteps_NoNA$day)
dataSteps_NoNA$day
dataSteps_NoNA$Day
names(dataSteps_NoNA_2)
sapply(dataSteps_NoNA_2$is.Date(dataSteps_NoNA_2$date), switch, Sunday='WeekEnd', Monday='WeekDay')
sapply(weekdays(as.Date(dataSteps_NoNA$date)), switch, Sunday='weekend', Monday='weekday')
sapply(weekdays(as.Date(dataSteps_NoNA$date)), switch, Sunday='weekend', Saturday='weekend', 'weekday')
names(dataSteps_NoNA)
dataSteps_NoNA$weekday_flag <- sapply(weekdays(as.Date(dataSteps_NoNA$date)), switch, Sunday='weekend', Saturday='weekend', 'weekday')
names(dataSteps_NoNA)
dataSteps_NoNA$weekday_flag
aggregate(dataSteps_NoNA$steps, list(dataSteps_NoNA$weekday_flag), mean, na.rm=T)
aggregate(dataSteps_NoNA$steps, list(dataSteps_NoNA$weekday_flag), mean)
table(dataSteps_NoNA$weekday_flag)
aggregate(steps ~ interval+weekday_flag data=dataSteps_NoNA, mean, na.rm=T)
aggregate(steps ~ interval+weekday_flag data=dataSteps_NoNA, FUN="mean", na.rm=T)
aggregate(steps ~ interval+weekday_flag data=dataSteps_NoNA, FUN="mean")
aggregate(steps ~ interval+weekday_flag,data=dataSteps_NoNA, mean)
meanStepsPerIntervalDay <- aggregate(dataSteps_NoNA$steps ~ dataSteps_NoNA$interval+dataSteps_NoNA$weekday_flag, data=dataSteps_NoNA, mean)
plot(steps ~ interval | day, data=meanStepsPerIntervalNoMissingDay, type="l", layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
plot(steps ~ interval | day, data=meanStepsPerIntervalDay, type="l", layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
names(meanStepsPerIntervalDay)
names(meanStepsPerIntervalDay) <- c("interval", "weekday_flag", "steps")
names(meanStepsPerIntervalDay)
plot(steps ~ interval | weekday_flag, data=meanStepsPerIntervalDay, type="l", layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
names(meanStepsPerIntervalDay)
class(meanStepsPerIntervalDay)
xyplot(steps ~ interval | weekday_flag, data=meanStepsPerIntervalDay, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
library(lattice)
xyplot(steps ~ interval | weekday_flag, data=meanStepsPerIntervalDay, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
plot(steps ~ interval | weekday_flag, data=meanStepsPerIntervalDay, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
plot(steps ~ interval, data=meanStepsPerIntervalDay, type="l", grid=T, layout=c(1,2), ylab="Number of steps", xlab="5-min. intervals from midnight", main="Average  5-min. activity intervals: Weekdays vs. Weekends")
